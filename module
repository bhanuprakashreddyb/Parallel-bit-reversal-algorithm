module br(z1,z2,x1,x2,clk1,d,e,f);
    input clk1;
    input d,e,f;
    input [3:0]x1,x2;
    output reg [3:0]z1,z2;
    reg [3:0]y[15:0];
    reg [3:0]w[15:0];
    reg [3:0]p1,p2;
    reg [3:0] i,j;
   
   //Function to perform bit reversal 
   function [3:0]shuffle;
        input [3:0]x;
        reg [3:0]a;
        integer i;
        
            begin
                i=0;
                a=0;
                for(i=0;i<2;i=i+1)
                begin
                    a[i]=x[3-i];
                    a[3-i]=x[i];
                end
                shuffle=a;
             end
       endfunction
   
   //Reading inputs and storing them in a register bank
    always @(posedge clk1 && d)
    begin
       y[p1]=x1;
       y[p1+1]=x2;
       p1<=p1+2;
    end
    
    //Creating a register bank with bit_reversed indexes
    always @(posedge clk1 && e)
        begin
            w[p2]=shuffle(p2);
            p2<=p2+1; 
        end
    
    //Printing the outputs using the bit reversed indexes
    initial
        begin
            i=0;j=1;
        end
        
    always @(posedge clk1 && f)
        begin
            z1=y[w[i]];
            z2=y[w[j]];
            i=i+2;
            j=j+2;
        end
            
endmodule

